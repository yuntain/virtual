<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ssm.mapper.PhysicalMapper" >
  <resultMap id="BaseResultMap" type="cn.ssm.po.Physical" >
    <id column="phy_id" property="phyId" jdbcType="INTEGER" />
    <result column="phy_name" property="phyName" jdbcType="VARCHAR" />
    <result column="phy_memory" property="phyMemory" jdbcType="VARCHAR" />
    <result column="phy_disk" property="phyDisk" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    phy_id, phy_name, phy_memory, phy_disk
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.ssm.po.PhysicalExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from physical
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from physical
    where phy_id = #{phyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from physical
    where phy_id = #{phyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.ssm.po.PhysicalExample" >
    delete from physical
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.ssm.po.Physical" >
    insert into physical (phy_id, phy_name, phy_memory, 
      phy_disk)
    values (#{phyId,jdbcType=INTEGER}, #{phyName,jdbcType=VARCHAR}, #{phyMemory,jdbcType=VARCHAR}, 
      #{phyDisk,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.ssm.po.Physical" >
    insert into physical
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="phyId != null" >
        phy_id,
      </if>
      <if test="phyName != null" >
        phy_name,
      </if>
      <if test="phyMemory != null" >
        phy_memory,
      </if>
      <if test="phyDisk != null" >
        phy_disk,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="phyId != null" >
        #{phyId,jdbcType=INTEGER},
      </if>
      <if test="phyName != null" >
        #{phyName,jdbcType=VARCHAR},
      </if>
      <if test="phyMemory != null" >
        #{phyMemory,jdbcType=VARCHAR},
      </if>
      <if test="phyDisk != null" >
        #{phyDisk,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.ssm.po.PhysicalExample" resultType="java.lang.Integer" >
    select count(*) from physical
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update physical
    <set >
      <if test="record.phyId != null" >
        phy_id = #{record.phyId,jdbcType=INTEGER},
      </if>
      <if test="record.phyName != null" >
        phy_name = #{record.phyName,jdbcType=VARCHAR},
      </if>
      <if test="record.phyMemory != null" >
        phy_memory = #{record.phyMemory,jdbcType=VARCHAR},
      </if>
      <if test="record.phyDisk != null" >
        phy_disk = #{record.phyDisk,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update physical
    set phy_id = #{record.phyId,jdbcType=INTEGER},
      phy_name = #{record.phyName,jdbcType=VARCHAR},
      phy_memory = #{record.phyMemory,jdbcType=VARCHAR},
      phy_disk = #{record.phyDisk,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ssm.po.Physical" >
    update physical
    <set >
      <if test="phyName != null" >
        phy_name = #{phyName,jdbcType=VARCHAR},
      </if>
      <if test="phyMemory != null" >
        phy_memory = #{phyMemory,jdbcType=VARCHAR},
      </if>
      <if test="phyDisk != null" >
        phy_disk = #{phyDisk,jdbcType=VARCHAR},
      </if>
    </set>
    where phy_id = #{phyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ssm.po.Physical" >
    update physical
    set phy_name = #{phyName,jdbcType=VARCHAR},
      phy_memory = #{phyMemory,jdbcType=VARCHAR},
      phy_disk = #{phyDisk,jdbcType=VARCHAR}
    where phy_id = #{phyId,jdbcType=INTEGER}
  </update>
</mapper>